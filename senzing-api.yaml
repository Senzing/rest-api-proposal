openapi: 3.0.1
info:
  title: Senzing REST API
  version: "1.4"
  description: >-
    This is the Senzing REST API.  It describes the REST interface
    to Senzing API functions available via REST.  It leverages the
    Senzing native API which is documented at
    [https://docs.senzing.com](https://docs.senzing.com)
paths:
  /data-sources:
    get:
      summary: Get a list of configured data sources.
      operationId: listDataSources
      parameters:
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DataSourcesResponse'
  /data-sources/{dataSourceCode}/records/{recordId}:
    get:
      summary: Get an entity record by data source and record ID.
      operationId: getDataSourceRecord
      parameters:
      - name: dataSourceCode
        description: >-
          The data source code identifying the data source with which
          the requested record is associated.
        in: path
        required: true
        schema:
          type: string
      - name: recordId
        description: >-
           The identifier that uniquely identifies the requested record
           within a given data source.  This may have been specified
           when the record was loaded or generated automatically.
        in: path
        required: true
        schema:
          type: string
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RecordResponse'
  /entities/{entityId}:
    get:
      summary: Get a resolved entity by entity ID.
      operationId: getEntityByEntityId
      parameters:
      - name: entityId
        description: >-
          The unique numeric ID that identifies that entity being requested.
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withRelated
        description: >-
          An optional boolean query parameter specifying whether or not
          to pull the complete features and records for first-degree related
          entities (i.e.: the RelatedEntity instances will have the "partial"
          flag set to true rather than false).  If false, then all returned
          RelatedEntity instances will only contain partial data (the default).
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityResponse'
  /data-sources/{dataSourceCode}/records/{recordId}/entity:
    get:
      summary: Get a resolved entity by data source and record ID.
      operationId: getEntityByRecordId
      parameters:
      - name: dataSourceCode
        description: >-
          The data source code identifying the data source with which
          the requested record is associated.
        in: path
        required: true
        schema:
          type: string
      - name: recordId
        description: >-
           The identifier that uniquely identifies the requested record
           within a given data source.  This may have been specified
           when the record was loaded or generated automatically.
        in: path
        required: true
        schema:
          type: string
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withRelated
        description: >-
          An optional boolean query parameter specifying whether or not
          to pull the complete features and records for first-degree related
          entities (i.e.: the RelatedEntity instances will have the "partial"
          flag set to true rather than false).  If false, then all returned
          RelatedEntity instances will only contain partial data (the default).
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityResponse'
  /query-entities/by-entity-id:
    get:
      summary: Get a resolved entity by entity ID.
      operationId: getEntityByEntityId
      parameters:
      - name: entityId
        description: >-
          The unique numeric ID that identifies that entity being requested.
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withRelated
        description: >-
          An optional boolean query parameter specifying whether or not
          to pull the complete features and records for first-degree related
          entities (i.e.: the RelatedEntity instances will have the "partial"
          flag set to true rather than false).  If false, then all returned
          RelatedEntity instances will only contain partial data (the default).
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityResponse'
  /query-entities/by-record-id:
    get:
      summary: Get a resolved entity by data source and record ID.
      operationId: seatchEntityByRecordId
      parameters:
      - name: dataSourceCode
        description: >-
          The data source code identifying the data source with which
          the requested record is associated.
        in: query
        required: true
        schema:
          type: string
      - name: recordId
        description: >-
           The identifier that uniquely identifies the requested record
           within a given data source.  This may have been specified
           when the record was loaded or generated automatically.
        in: query
        required: true
        schema:
          type: string
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withRelated
        description: >-
          An optional boolean query parameter specifying whether or not
          to pull the complete features and records for first-degree related
          entities (i.e.: the RelatedEntity instances will have the "partial"
          flag set to true rather than false).  If false, then all returned
          RelatedEntity instances will only contain partial data (the default).
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityResponse'
  /query-entities/by-attribute:
    get:
      summary: >-
        Search for entities that would match or relate to the provided
        entity features.
      operationId: searchByAttributes
      parameters:
      - name: attrs
        description: >-
          The JSON describing the entity attributes in the same format as
          how an entity record would be loaded.  The specified attribtues
          will be treated as a hypothetical record being loaded and the
          result will be anything that would have matched or related to it.
        in: query
        required: true
        schema:
          type: object
          additionalProperties: {}
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityAttributeSearchResponse'
  /query-entity-paths/by-entity-id:
    get:
      summary: >-
        Finds a path between to entities identified by entity ID
      operationId: findPathByEntityID
      parameters:
      - name: fromEntityId
        description: >-
          The entity ID of the first entity for the path.
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: toEntityId
        description: >-
          The entity ID of the last entity for the path.
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: maxDegrees
        description: >-
            The maximum number of degrees to look for a path from the first
            entity to the last entity.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 3
      - name: avoidEntities
        description: >-
            The array of entity identifiers that identify entities to be avoided
            or forbidden from the path (depending on the forbidAvoided
            parameter).  The entity identifiers are either all 64-bit long
            integers representing entity IDs or they are all RecordId instances
            identifying records that are part of the resolved entities to avoid.
            If this parameter is not provided, then the default is to NOT
            exclude any entities.
        in: query
        required: false
        schema:
          type: array
          items:
            oneOf:
              - type: integer
                format: int64
              - $ref: '#/components/schemas/RecordId'
      - name: forbidAvoided
        description: >-
          If the avoidEntities parameter is provided then this flag is used to
          control whether or not to forbid the avoided entities rather than
          include them in the path as a "last resort".
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withSources
        description: >-
          The array of string data source codes identifying data sources for
          which one must be included in the entities for the path.  If not
          provided, then the default is to NOT require any specific data
          sources.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityPathResponse'
  /query-entity-paths/by-record-id:
    get:
      summary: >-
        Finds a path between to entities identified by data source and
        record IDs
      operationId: findPathByRecordID
      parameters:
      - name: fromDataSource
        description: >-
          The data source of the record for the first entity in the path.
        in: query
        required: true
        schema:
          type: string
      - name: fromRecordId
        description: >-
          The record Id of the record for the first entity in the path
        in: query
        required: true
        schema:
          type: string
      - name: toDataSource
        description: >-
          The data source of the record for the last entity in the path.
        in: query
        required: true
        schema:
          type: string
      - name: toRecordId
        description: >-
          The record Id of the record for the last entity in the path.
        in: query
        required: true
        schema:
          type: string
      - name: maxDegrees
        description: >-
            The maximum number of degrees to look for a path from the first
            entity to the last entity.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 5
      - name: avoidEntities
        description: >-
            The array of entity identifiers that identify entities to be avoided
            or forbidden from the path (depending on the forbidAvoided
            parameter).  The entity identifiers are either all 64-bit long
            integers representing entity IDs or they are all RecordId instances
            identifying records that are part of the resolved entities to avoid.
            If this parameter is not provided, then the default is to NOT
            exclude any entities.
        in: query
        required: false
        schema:
          type: array
          items:
            oneOf:
              - type: integer
                format: int64
              - $ref: '#/components/schemas/RecordId'
      - name: forbidAvoided
        description: >-
          If the avoidEntities parameter is provided then this flag is used to
          control whether or not to forbid the avoided entities rather than
          include them in the path as a "last resort".
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: withSources
        description: >-
          The array of string data source codes identifying data sources for
          which one must be included in the entities for the path.  If not
          provided, then the default is to NOT require any specific data
          sources.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityPathResponse'
  /query-entity-networks/by-entity-id:
    get:
      summary: >-
        Finds the entity network around one or more entities identified by
        their entity IDs and attempts to find paths between the specified
        entities.  If no paths exist, then island networks are returned
        with each island network containing up to a specified number of
        related entities.
      operationId: findNetworkByEntityID
      parameters:
      - name: entityIds
        description: >-
          The array of 64-bit integer entity IDs identifying the entities for
          which the networks and paths are being requested.
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: maxDegrees
        description: >-
            The maximum number of degrees to look for a path between the
            specified entity IDs.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 5
      - name: buildOut
        description: >-
            The maximum number of degrees to build out around each of the
            specified entities regardless of those entities being on the
            path between entities.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 1
      - name: maxEntities
        description: >-
            The maximum number of entities to return to prevent responses
            that are too large.
        in: query
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
          default: 1000
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityNetworkResponse'
  /query-entity-networks/by-record-id:
    get:
      summary: >-
        Finds the entity network around one or more entities that contain the
        records identified by specified data source / record ID pairs.  If no
        paths exist, then island networks are returned with each island network
        containing up to a specified number of related entities.
      operationId: findNetworkByRecordID
      parameters:
      - name: recordIds
        description: >-
          The array of RecordId instances identifying the records that are part
          of the resolved entities for which the networks and paths are being
          requested.
        in: query
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/RecordId'
      - name: maxDegrees
        description: >-
            The maximum number of degrees to look for a path between the
            specified entity IDs.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 5
      - name: buildOut
        description: >-
            The maximum number of degrees to build out around each of the
            specified entities regardless of those entities being on the
            path between entities.
        in: query
        required: false
        schema:
          type: integer
          format: int8
          minimum: 0
          maximum: 100
          default: 1
      - name: maxEntities
        description: >-
            The maximum number of entities to return to prevent responses
            that are too large.
        in: query
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
          default: 1000
      - name: withRaw
        description: >-
          An optional boolean query parameter specifying whether or not
          to include the raw JSON response from the underlying native API.
          This raw response may include additional details but lack some
          of the abstraction the standard response provides.  If true,
          then the 'rawData' field in the response will be a non-null
          value and contain the additional details.
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EntityNetworkResponse'
components:
  schemas:
    BaseResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            httpMethod:
              type: string
              enum:
                - GET
                - POST
                - PUT
                - PATCH
                - DELETE
            timestamp:
              type: string
              format: date-time
        links:
          type: object
          properties:
            self:
              type: string
        rawData:
          description: >-
            The RAW result from the underlying native API function.
          type: object
          nullable: true
          additionalProperties: {}
    DataSourcesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                dataSources:
                  description: >-
                    The list of data source codes that are configured.
                  type: array
                  items:
                    type: string
    RecordResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                record:
                  description: >-
                    The EntityRecord describing the matching record.
                  $ref: '#/components/schemas/EntityRecord'
    EntityResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/EntityData'
    EntityAttributeSearchResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                searchResults:
                  description: >-
                    The array AttributeSearchResult instances describing the
                    entities matching the specified entity search attributes
                    including the AttributeSearchResultType for each.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeSearchResult'
    EntityPathResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/EntityPathData'
    EntityNetworkResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/EntityNetworkData'
    RecordId:
      description: >-
        Identifies a record by its data source code and record identifier.
      type: object
      properties:
        dataSource:
          description: >-
            The data source code that uniquely identifies the data source
            associated with the record.
          type: string
        recordId:
          description: >-
            The record ID that uniquely identifies a record within the
            respective data source.
          type: string
    EntityRecord:
      description: >-
        Describes a record (aka: observed entity) that has been loaded for
        a particular data source.
      type: object
      properties:
        dataSource:
          type: string
          description: >-
            The data source code identifying the source from which the record
            was loaded.
        recordId:
          type: string
          description: >-
            The identifier that uniquely identifies this record from other
            records from the same data source.  This may have been loaded with
            the record or automatically generated from the record's data.
        recordHash:
          type: string
          description: >-
            A hash of the record data that effectively uniquely identifies the
            the record and its data as it was loaded.  This is used to identify
            records that are exact duplicates of one another.
        addressData:
          description: >-
            An array of addresses associated with the record that are formatted
            for readability.  These may be prefixed by a "usage type" if one
            was provided (e.g.: "HOME: 101 Main Street")
          type: array
          items:
            type: string
        attributeData:
          description: >-
            An array of attributes associated with the record that are formatted
            for readability.  These will be prefixed by an attribtue type and
            optionally by a "usage type" if one was provided.
          type: array
          items:
            type: string
        identifierData:
          description: >-
            An array of entity data associated with the record where the items
            are formatted for readability.  These will be prefixed by an
            identifier type and may be prefixed by a "usage type" if one was
            provided (e.g.: "ID: 123456789" or "EMAIL: WORK: joe@nowhere.com")
          type: array
          items:
            type: string
        nameData:
          description: >-
            An array of names associated with the record that are formatted for
            readability.  These may be prefixed by a "usage type" if one was
            provided (e.g.: "Joe Schmoe" or "AKA: Joseph P. Schmoe")
          type: array
          items:
            type: string
        phoneData:
          description: >-
            An array of phone numbers associated with the record that are
            formatted for readability.  These may be prefixed by a "usage type"
            if one was provided (e.g.: "HOME: 702-555-1212")
          type: array
          items:
            type: string
        relationshipData:
          description: >-
            An array of relationship data items associated with the record that
            describes disclosed relationships.
          type: array
          items:
            type: string
        otherData:
          description: >-
            An array of associated data items that were loaded with the record
            but not normally recognized or used for entity resolution.  This
            array usually contains useful information from the source system.
          type: array
          items:
            type: string
        originalSourceData:
          description: >-
            The JSON representation of the original data record that was
            loaded.
          type: object
          additionalProperties: {}
    DataSourceRecordSummary:
      description: >-
        Describes the number of records associated with a specific data source
        for a given resolved entity.  Optionally, if the complete set of records
        has been retrieved for the associated entity, then this may also contain
        the "top 10" record IDs for the associated data source.
      type: object
      properties:
        dataSource:
          description: >-
            The data source code identifying the data source for which the
            record breakdown is being described.
          type: string
        recordCount:
          description: >-
            The number of records from the respective data source that are
            part of the associated resolved entity.
          type: integer
          format: int32
        topRecordIds:
          description: >-
            The optional array of string record ID's identifying the top 10
            records for the associated entity from the respective data source.
            This may be null or an empty array if the data was not available.
          type: array
          nullable: true
          items:
            type: string
    EntityFeature:
      description: >-
        Describes a feature for an entity as well as including any close values
        for the feature that were considered to be duplicate values for
        entity resolution purposes.
      type: object
      properties:
        primaryValue:
          type: string
        usageType:
          description: >-
            The optional associated usage type (e.g.: "HOME" or "WORK")
          type: string
          nullable: true
        duplicateValues:
          description: >-
            The array of values that are close enough to the primary value
            for the feature that they are considered to be duplicate values for
            the purpose of entity resolution.
          type: array
          items:
            type: string
    ResolvedEntity:
      description: >-
        Describes a resolved entity that is made up of one or more EntityRecord
        instances.
      type: object
      properties:
        entityId:
          description: >-
            The unique numeric ID identifying the entity.
          type: integer
          format: int64
        entityName:
          description: >-
            The name associated with this entity that is considered the
            best name among all the associated names.
          type: string
        bestName:
          description: >-
            Usually the same as the entityName property, but this may differ
            if the entity was found based on a name search.  In such a case,
            this field represents the name that most closely matches the name
            that was searched on.
          type: string
        recordSummary:
          description: >-
            The array of DataSourceRecordSummary instances describing the
            number of records associated with each data source that contributes
            to this entity.
          type: array
          items:
            $ref: '#/components/schemas/DataSourceRecordSummary'
        nameData:
          description: >-
            An array of names associated with the entity that are formatted for
            readability.  These may be prefixed by a "usage type" if one was
            provided (e.g.: "Joe Schmoe" or "AKA: Joseph P. Schmoe")
          type: array
          items:
            type: string
        attributeData:
          description: >-
            An array of attributes associated with the entity that are formatted
            for readability.  These will be prefixed by an attribtue type and
            optionally by a "usage type" if one was provided.
          type: array
          items:
            type: string
        addressData:
          description: >-
            An array of addresses associated with the entity that are formatted
            for readability.  These may be prefixed by a "usage type" if one
            was provided (e.g.: "HOME: 101 Main Street")
          type: array
          items:
            type: string
        phoneData:
          description: >-
            An array of phone numbers associated with the entity that are
            formatted for readability.  These may be prefixed by a "usage type"
            if one was provided (e.g.: "HOME: 702-555-1212")
          type: array
          items:
            type: string
        identifierData:
          description: >-
            An array of entity data associated with the record where the items
            are formatted for readability.  These will be prefixed by an
            identifier type and may be prefixed by a "usage type" if one was
            provided (e.g.: "ID: 123456789" or "EMAIL: WORK: joe@nowhere.com")
          type: array
          items:
            type: string
        records:
          description: >-
            The array of EntityRecord instances describing the records
            associated with this entity.
          type: array
          items:
            $ref: '#/components/schemas/EntityRecord'
        features:
          description: >-
            The map of string feature names to arrays of EntityFeature instances
            describing the values associated with each respective feature name.
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EntityFeature'
    BaseRelatedEntity:
      description: >-
        Provides the additional fields to a ResolvedEntity that describe
        an entity's relationship to another.  This serves as a basis for
        AttributeSearchResult and RelatedEntity.
      allOf:
        - $ref: '#/components/schemas/ResolvedEntity'
        - type: object
          properties:
            matchLevel:
              description: >-
                The integer "match level" describing how the related entity
                matched to the primary resolved entity.
              type: integer
              format: int32
            fullNameScore:
              description: >-
                The full name score between the primary resolved entity and
                this related entity.  The higher the score the closer the
                name match.
              type: integer
              format: int32
            matchScore:
              description: >-
                The match score between the primary resolved entity and
                this related entity.  The higher the score the closer
                the match.
              type: integer
              format: int32
            disclosed:
              description: >-
                A boolean flag indicating if this related entity
                represents a disclosed relationship.
              type: boolean
            ambiguous:
              description: >-
                A boolean flag indicating if this related entity
                represents an ambiguous relationship.
              type: boolean
            matchKey:
              description: >-
                The match key describing what features matched between
                the primary resolved entity and the related entity.
              type: string
            resolutionRuleCode:
              description: >-
                The code identifying the resolution rule that related
                this entity to the primary resolved entity.
              type: string
            refScore:
              description: >-
                The ref score between the primary resolved entity and
                this related entity.
              type: integer
              format: int32
            partial:
              description: >-
                If true then this RelatedEntity has complete features and
                records, otherwise they are not provided.  Also, the
                recordSummary items will be missing the topRecordIds if partial
                is true.
              type: boolean
    RelationshipType:
      description: >-
        Describes how an entity is related to another (either a possible match,
        a discovered possible relationship or a disclosed relationship)
      type: string
      enum:
        - POSSIBLE_MATCH
        - POSSIBLE_RELATION
        - DISCLOSED_RELATION
    RelatedEntity:
      description: >-
        Provides a description of an entity that is related to a
        ResolvedEntity.  This describes how the entity is related and may
        be missing the complete features and record list of a ResolvedEntity.
      allOf:
        - type: object
          properties:
            relationType:
              $ref: '#/components/schemas/RelationshipType'
        - $ref: '#/components/schemas/BaseRelatedEntity'
    EntityData:
      description: >-
        Describes an entity and the entities related to that entity at
        one degree of separation.
      type: object
      properties:
        resolvedEntity:
          description: The ResolvedEntity describing the primary entity.
          $ref: '#/components/schemas/ResolvedEntity'
        relatedEntities:
          description: >-
            The array of RelatedEntity instances describing the possible
            matches, discovered relationships, and disclosed relationships.
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
    AttributeSearchResultType:
      description: >-
        Describes how the entity matching the search attributes would have
        entity resolved against those attributes (either a match, possible
        match, discovered relationship or name only match).
      type: string
      enum:
        - MATCH
        - POSSIBLE_MATCH
        - POSSIBLE_RELATION
        - NAME_ONLY_MATCH
    AttributeSearchResult:
      description: >-
        Describes an entity that matched attribute search criteria and how
        it matched against that criteria.
      allOf:
        - type: object
          properties:
            resultType:
              $ref: '#/components/schemas/AttributeSearchResultType'
        - $ref: '#/components/schemas/BaseRelatedEntity'
    EntityPath:
      description: >-
        Describes a path between two entities using the entity IDs of the
        entities in the path.
      type: object
      properties:
        startEntityId:
          description: The starting entity ID for the path.
          nullable: false
          type: integer
          format: int64
        endEntityId:
          description: The ending entity ID for the path.
          nullable: false
          type: integer
          format: int64
        entityIDs:
          description: >-
            The array of entity IDs identifying the entities on the path
            in order of how are they are connected on the path.  This is
            null if there is no path between the entities.
          nullable: true
          type: array
          items:
            type: integer
            format: int64
    EntityPathData:
      description: >-
        Describes a path between two entities using the entity IDs of the
        entities in the path and includes the data from the actual entities
        on the path.
      type: object
      properties:
        entityPath:
          $ref: '#/components/schemas/EntityPath'
        entities:
          description: >-
            The array of EntityData objects describing the entities on the
            path.  This will include partial information on the first-degree
            related entities to the entity.
          type: array
          items:
            $ref: '#/components/schemas/EntityData'
    EntityNetworkData:
      description: >-
        Describes a network of paths between entities using the entity IDs of
        the entities in the path and includes the data from the actual entities
        in the network.
      type: object
      properties:
        entityPaths:
          description: >-
            The array of EntityPath objects describing the paths that make up
            the entity network (including island networks).
          type: array
          items:
            $ref: '#/components/schemas/EntityPath'
        entities:
          description: >-
            The array of EntityData objects describing the entities on the
            path.  This may only include partial information on the entities at
            the edge of the network.
          type: array
          items:
            $ref: '#/components/schemas/EntityData'
